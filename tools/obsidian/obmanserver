#!/usr/bin/bash


CONF_DIR=$HOME/ls-ob/config
DATA_DIR=$HOME/ls-ob/data
OB_PORT=5150

function verify_setup() {
  # verify podman
  install_podman
  # verify podman pull lscr.io/linuxserver/obsidian:latest 
  if ! is_running; then
    pull_image
  fi
  # verify ~/obsidian
  if [ -d $CONF_DIR ]; then
    echo "exists: CONF_DIR=$CONF_DIR"
  else
    echo "Verify failure: CONF_DIR does not exist: $CONF_DIR"
    exit 1
  fi

  if [ -d "$DATA_DIR" ]; then
    echo "exists: DATA_DIR=$DATA_DIR"
  else
    echo "Verify failure: DATA_DIR does not exist: $DATA_DIR"
    exit 1
  fi
}

function is_running() {
  if podman ps --format '{{.Names}}' | grep -q '^obsidian$'; then
    echo "Obsidian container is running"
    return 0
  else
    echo "Obsidian container is not running"
    return 1
  fi
}

function install_podman() {
  if ! command -v podman; then
    sudo apt update && sudo apt install podman
    echo 'alias docker=podman'
  else
    echo "skipping podman install ...already have podman"
  fi
}

function pull_image() {
  if ! is_running; then
    echo "pulling latest image: lcr.io/linuxserver/obsidian.latest"
    podman pull lscr.io/linuxserver/obsidian.latest
  else
    echo "Failed pull_image: the image is currently running . stop before pull"
    exit 1
  fi
}

function start_obcon() {
  podman run -d \
    --name=obsidian \
    -e PUID=$(id -u) \
    -e PGID=$(id -g) \
    -e TZ=America/Anchorage \
    -p $OB_PORT:3000 \
    -v $CONF_DIR:/config \
    -v $DATA_DIR:/data \
    --restart unless-stopped \
    lscr.io/linuxserver/obsidian:latest

  LAUNCH_CODE=$? 
  if [ $LAUNCH_CODE -eq 0 ]; then
    echo 'Success: podman run of linuxserver/obsidian done'
    echo "Open a browser and go to: http://localhost:$OB_PORT/"
  else
    echo "Fail: podman run failed for linuxserver/obsidian"
    exit $LAUNCH_CODE
  fi
}

function do_stop() {
  local CMD="podman stop obsidian"
  if is_running; then
    if $CMD; then
      echo "success: container stopped"
    else
      echo "failed: $CMD"
      exit 1
    fi
  else
    echo "obsidian image not running .. not calling: $CMD"
  fi
}

function do_start() {
  verify_setup
  echo "Launching obsidian on port $OB_PORT"
  if is_running; then
    echo "Skipping run .. already running"
  else
    start_obcon
  fi
}

function do_status {
  if is_running; then
    echo "Check it out at http://localhost:$OB_PORT"
  fi
}

function do_setup {
  if is_running; then
    echo "Huh.. no need for setup, it is already running"
  else
    verify_setup
  fi
}

function do_update() {
  system_sane
  echo "doing update: stopping image, removing old container, pull latest" 
  echo "data will be safe because it is stored in $DATA_DIR, and $CONF_DIR"
  sleep 1
  echo "startign pull"
  if podman pull lscr.io/linuxserver/obsidian:latest; then
    echo "latest image pulled .. ready to stop and re-run"
  else
    echo "pulling latest image failed .. "
    exit 1
  fi

  do_stop

  do_start
}

function do_help() {
  echo "$0 [command] "
  echo "  start   - launch container server"
  echo "  stop    - stop container server"
  echo "  status  - check status"
  echo "  setup   - setup and pull image"
  echo "  update  - update local image"
  echo "  help    - this message"
}

cmd="do_${1:-start}"

if declare -f "$cmd" > /dev/null; then
  "$cmd"
else
  echo "no valid command found '$cmd' - defaulting to do_start"
  do_start
fi
